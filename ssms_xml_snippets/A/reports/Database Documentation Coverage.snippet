<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
<_locDefinition xmlns="urn:locstudio">
    <_locDefault _loc="locNone" />
    <_locTag _loc="locData">Title</_locTag>
    <_locTag _loc="locData">Description</_locTag>
    <_locTag _loc="locData">Author</_locTag>
    <_locTag _loc="locData">ToolTip</_locTag>
</_locDefinition>
<CodeSnippet Format="1.0.0">
<Header>
<Title>Documentation Coverage</Title>
<Shortcut></Shortcut>
<Description>Check the documentation for a database</Description>
<Author>Bryan Jenks</Author>
<SnippetTypes><SnippetType>Expansion</SnippetType></SnippetTypes>
</Header>
<Snippet>
<Declarations>
<!-- 	<Literal>
		<ID>DATABASE</ID>
		<ToolTip>The name of the database to check for documentation coverage</ToolTip>
		<Default>DATABASE</Default>
	</Literal> -->
</Declarations>
<Code Language="SQL"><![CDATA[SELECT --objects AND columns
CASE WHEN ob.parent_object_id>0 
THEN CONCAT_WS('.',OBJECT_SCHEMA_NAME(ob.parent_object_id), OBJECT_NAME(ob.parent_object_id), ob.[name])
ELSE CONCAT_WS('.', OBJECT_SCHEMA_NAME(ob.[OBJECT_ID]), ob.[name]) 
END + 
CASE WHEN ep.minor_id>0 
THEN '.' + col.[name]
ELSE '' END AS [Path],
'schema' + CASE WHEN ob.parent_object_id>0 
THEN '/table'
ELSE '' 
END + '/' + 
CASE WHEN ob.type IN ('TF','FN','IF','FS','FT') THEN 'function'
WHEN ob.type IN ('P', 'PC','RF','X') then 'procedure' 
WHEN ob.type IN ('U','IT') THEN 'table'
WHEN ob.type='SQ' THEN 'queue'
ELSE LOWER(ob.type_desc)
END + 
CASE WHEN col.column_id IS NULL THEN '' ELSE '/column' END AS [Thing], 
ep.[name],
value 
FROM sys.extended_properties AS ep
INNER JOIN sys.objects AS ob
ON ep.major_id = ob.[OBJECT_ID]
AND class = 1
LEFT OUTER JOIN sys.columns AS col 
ON ep.major_id = col.[OBJECT_ID]
AND class = 1 
AND ep.minor_id = col.column_id

UNION ALL

SELECT --indexes
CONCAT_WS('.', OBJECT_SCHEMA_NAME(ob.[OBJECT_ID]), OBJECT_NAME(ob.[OBJECT_ID]), ix.[name]),
'schema/' + LOWER(ob.type_desc) + '/index',
ep.[name],
value
FROM sys.extended_properties AS ep
INNER JOIN sys.objects AS ob 
ON ep.major_id = ob.[OBJECT_ID]
AND class = 7
INNER JOIN sys.indexes AS ix 
ON ep.major_id = ix.[OBJECT_ID]
AND class = 7 
AND ep.minor_id = ix.index_id

UNION ALL

SELECT --Parameters
CONCAT_WS('.', OBJECT_SCHEMA_NAME(ob.[OBJECT_ID]), OBJECT_NAME(ob.[OBJECT_ID]), par.[name]),
'schema/' + LOWER(ob.type_desc) + '/parameter',
ep.[name],
value
FROM sys.extended_properties AS ep
INNER JOIN sys.objects AS ob 
ON ep.major_id = ob.[OBJECT_ID]
AND class = 2
INNER JOIN sys.parameters AS par 
ON ep.major_id = par.[OBJECT_ID] 
AND class = 2 
AND ep.minor_id = par.parameter_id

UNION ALL

SELECT --schemas
sch.[name],
'schema',
ep.[name],
value
FROM sys.extended_properties AS ep
INNER JOIN sys.schemas AS sch
ON class = 3
AND ep.major_id = SCHEMA_ID

UNION ALL

SELECT --Database 
DB_NAME(), 
'',
ep.[name],
value
FROM sys.extended_properties AS ep 
WHERE class = 0

UNION ALL

SELECT --XML Schema Collections
CONCAT_WS('.', SCHEMA_NAME(SCHEMA_ID), XC.[name]),
'schema/xml_Schema_collection',
ep.[name],
value
FROM sys.extended_properties AS ep
INNER JOIN sys.xml_schema_collections AS xc
ON class = 10
AND ep.major_id = xml_collection_id

UNION ALL

SELECT --Database Files
df.[name],
'database_file',
ep.[name],
value 
FROM sys.extended_properties AS ep
INNER JOIN sys.database_files AS df
ON class = 22
AND ep.major_id = file_id

UNION ALL

SELECT --Data Spaces
ds.[name],
'dataspace',
ep.[name],
value 
FROM sys.extended_properties AS ep
INNER JOIN sys.data_spaces AS ds
ON class = 20
AND ep.major_id = data_space_id

UNION ALL 

SELECT --USER
dp.[name],
'database_principal',
ep.[name],
value
FROM sys.extended_properties AS ep
INNER JOIN sys.database_principals AS dp 
ON class = 4
AND ep.major_id = dp.principal_id

UNION ALL

SELECT --PARTITION FUNCTION
pf.[name],
'partition_function',
ep.[name],
value
FROM sys.extended_properties AS ep
INNER JOIN sys.partition_functions AS pf
ON class = 21
AND ep.major_id = pf.function_id

UNION ALL

SELECT --REMOTE SERVICE BINDING
rsb.[name],
'remote service binding',
ep.[name],
value
FROM sys.extended_properties AS ep
INNER JOIN sys.remote_service_bindings AS rsb 
ON class = 18
AND ep.major_id = rsb.remote_service_binding_id

UNION ALL

SELECT --Route
rt.[name],
'route',
ep.[name],
value
FROM sys.extended_properties AS ep
INNER JOIN sys.routes AS rt
ON class = 19
AND ep.major_id = rt.route_id

UNION ALL

SELECT --Service
sv.[name] COLLATE DATABASE_DEFAULT,
'service',
ep.[name],
value
FROM sys.extended_properties AS ep
INNER JOIN sys.services AS sv
ON class = 17
AND ep.major_id = sv.service_id

UNION ALL

SELECT -- 'CONTRACT'
svc.[name],
'service_contract',
ep.[name],
value
FROM sys.service_contracts AS svc
INNER JOIN sys.extended_properties AS ep
ON class = 16
AND ep.major_id = svc.service_contract_id

UNION ALL

SELECT -- 'MESSAGE TYPE'
smt.[name],
'message_type',
ep.[name],
value
FROM sys.service_message_types AS smt
INNER JOIN sys.extended_properties AS ep
ON class = 15
AND ep.major_id = smt.message_type_id

UNION ALL

SELECT -- 'assembly'
asy.[name],
'assembly',
ep.[name],
value
FROM sys.assemblies AS asy
INNER JOIN sys.extended_properties AS ep
ON class = 5
AND ep.major_id = asy.assembly_id

/*
UNION ALL SELECT --'CERTIFICATE'
cer.[name],'certificate', ep.[name],value from sys.certificates cer
INNER JOIN sys.extended_properties ep ON class=? AND ep.major_id=cer.certificate_id
UNION ALL SELECT --'ASYMMETRIC KEY'
amk.[name],'asymmetric_key', ep.[name],value SELECT * from sys.asymmetric_keys amk
INNER JOIN sys.extended_properties ep ON class=? AND ep.major_id=amk.asymmetric_key_id
SELECT --'SYMMETRIC KEY'
smk.[name],'symmetric_key', ep.[name],value from sys.symmetric_keys smk
INNER JOIN sys.services sv ON class=? AND ep.major_id=smk.symmetric_key_id
*/

UNION ALL 

SELECT -- 'PLAN GUIDE' 
pg.[name],
'plan_guide',
ep.[name],
value
FROM sys.plan_guides AS pg
INNER JOIN sys.extended_properties AS ep
ON class = 27
AND ep.major_id = pg.plan_guide_id
GO]]>
</Code>
</Snippet>
</CodeSnippet>
</CodeSnippets>
